defaultTasks 'clean', 'build', 'generateTypeScript', 'generatePython3', 'generatePython2', 'dist'

apply plugin: 'java'
apply plugin: 'osgi'
apply plugin: 'maven'
apply plugin: 'signing'

group = "ch.softappeal.yass"

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    main { java { srcDir 'java/main' } }
    test { java { srcDir 'java/test' } }
    tutorial { java { srcDir 'java/tutorial' } }
}

def websocket_dep = 'javax.websocket:javax.websocket-api:1.0'
def jetty_dep = 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.3.12.v20160915'
def undertow_dep = 'io.undertow:undertow-websockets-jsr:1.4.3.Final'
def junit_dep = 'junit:junit:4.12'

dependencies {
    compileOnly websocket_dep
    tutorialCompile sourceSets.main.output, jetty_dep, undertow_dep
    testCompile junit_dep, jetty_dep, undertow_dep
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint"
    options.compilerArgs << "-parameters"
    options.encoding = "US-ASCII"
}

task generateTypeScript(type: JavaExec) {
    main = 'ch.softappeal.yass.tutorial.initiator.web.GenerateTypeScript'
    classpath = sourceSets.tutorial.runtimeClasspath
}

task generatePython3(type: JavaExec) {
    main = 'ch.softappeal.yass.tutorial.py.GeneratePython3'
    classpath = sourceSets.tutorial.runtimeClasspath
}

task generatePython2(type: JavaExec) {
    main = 'ch.softappeal.yass.tutorial.py.GeneratePython2'
    classpath = sourceSets.tutorial.runtimeClasspath
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:all,-missing', '-quiet')
}

jar {
    from "readme.md"
    from "license.txt"
    manifest { attributes("Implementation-Version": "${version}") }
}

task packageSources(type: Jar) {
    from "readme.md"
    from "license.txt"
    from sourceSets.main.allSource
    classifier = 'sources'
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from "readme.md"
    from "license.txt"
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives(packageSources)
    archives(packageJavadoc)
}

task dist << {
    pom {
        project {
            name project.name
            description 'Yet Another Service Solution'
            url 'https://github.com/softappeal/yass'
            licenses {
                license { name 'The BSD 3-Clause License' }
            }
            scm { url 'https://github.com/softappeal/yass' }
            organization { name 'softappeal GmbH Switzerland' }
            developers {
                developer { name 'Angelo Salvade' }
            }
        }
    }.writeTo("build/libs/${project.name}-${version}.pom")
    if (project.hasProperty('signing.password')) {
        def signPrefix = "build/libs/${project.name}-${version}"
        signing.sign(file("${signPrefix}.pom"))
        signing.sign(file("${signPrefix}.jar"))
        signing.sign(file("${signPrefix}-sources.jar"))
        signing.sign(file("${signPrefix}-javadoc.jar"))
    }
    ant.zip(destfile: "build/${project.name}-${version}_artifacts.zip") {
        fileset(dir: 'build/libs')
    }
}
